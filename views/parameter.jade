// views/parameter

if parameter.Required === 'Y'
  required = true
  className = 'required'
else
  required = false
  className = ''

placeholder = className

if parameter.Type && parameter.Type.match(/\[\]$/)
  paramClass = 'repeatable'
  paramType = parameter.Type.replace('[]', '')
else
  paramClass = ''
  paramType = parameter.Type || ''

defVal = parameter.Default
if defVal && (defVal.match('^/') || parameter.Repeat)
  paramClass = paramClass + ' dynamic'
  defVal = apiInfo.protocol + '://' + apiInfo.baseURL + apiInfo.publicPath + defVal

repeat = parameter.Repeat
if repeat
  repeat = apiInfo.protocol + '://' + apiInfo.baseURL + apiInfo.publicPath + repeat

isVariable = false
paramName = parameter.Name
if parameter.Name.match(/{N}/)
  isVariable = true
  paramName = parameter.Name.replace(/{N}/, '1')
  className = className + ' numbered' + ' ' + paramClass

tr(id='param' + paramCount, class=className, data-repeat=repeat, data-depends=parameter.Depends)
   
  td.name
    if '?' === parameter.Name
      isVariable = true
      input.variable-param(type = 'text')
    else if parameter.Name.match(/\?/)
      isVariable = true
      input.variable-param(type = 'text', value = parameter.Name)
    else
      | #{paramName}

  td.parameter

    case paramType.toLowerCase()
      when 'enumerated'
        select(class=paramClass, name='params[' + parameter.Name + ']', placeholder=placeholder)
          if parameter.Default == ''
            option(value='') 
          each choice in parameter.EnumeratedList
            if parameter.Default == choice
              option(value=choice, selected=true) #{choice}
            else
              option(value=choice) #{choice}
      when 'boolean'
        select(class=paramClass, name='params[' + parameter.Name + ']', placeholder=placeholder)
          if parameter.Default == ''
            option(value='') 
          each choice in [apiInfo.booleanTrueVal, apiInfo.booleanFalseVal]
            if parameter.Default == choice
              option(value=choice, selected=true) #{choice}
            else
              option(value=choice) #{choice}
      when 'json'
        schema = parameter.Schema || ''
        textarea(
          class = 'param ' + paramClass,
          rows = "4",
          cols = "50",
          name = 'params[' + parameter.Name + ']',
          value = parameter.Default, placeholder=placeholder, data-xmlschema=schema)
      when 'xml'
        schema = parameter.Schema || ''
        textarea(
          class = 'param ' + paramClass,
          rows = "4",
          cols = "50",
          name = 'params[' + parameter.Name + ']',
          value = parameter.Default, placeholder=placeholder, data-xmlschema=schema)
      when 'integer'
        input(
          class = paramClass,
          name = 'params[' + parameter.Name  + ']',
          value = parameter.Default,
          placeholder = className,
          type = "number",
          max = parameter.Max,
          min = parameter.Min)
      when 'email'
        input(
          class = paramClass,
          name = 'params[' + parameter.Name + ']',
          value = defVal,
          placeholder = className,
          type = 'email')
      default
        input(
          class = paramClass,
          name = 'params[' + paramName + ']',
          value = defVal,
          placeholder = placeholder,
          type = 'text')

  td.type=parameter.Type.replace(/[\[\]]/g, '')

  td.description
      p=parameter.Description || 'No description'
      if parameter.Type =='enumerated' && parameter.EnumeratedDescription
        dl.clearfix
          each description, choice in parameter.EnumeratedDescription
            dt #{choice}
            dd #{description}

  td.enabled
    if required
      input(type='checkbox', checked=true, disabled=true, title="This parameter must be provided")
    else 
      input(type='checkbox', class='provide-' + paramName, title="Provide this optional parameter")

  td.variable
    if isVariable
      div.btn-group
        button.btn.btn-small.add +
        button.btn.btn-small.remove -
    else
      | &nbsp;



